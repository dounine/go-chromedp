// Code generated by MockGen. DO NOT EDIT.
// Source: go-chromedp/app/service (interfaces: IDumpEngineService)

// Package service is a generated GoMock package.
package service

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockIDumpEngineService is a mock of IDumpEngineService interface.
type MockIDumpEngineService struct {
	ctrl     *gomock.Controller
	recorder *MockIDumpEngineServiceMockRecorder
}

// MockIDumpEngineServiceMockRecorder is the mock recorder for MockIDumpEngineService.
type MockIDumpEngineServiceMockRecorder struct {
	mock *MockIDumpEngineService
}

// NewMockIDumpEngineService creates a new mock instance.
func NewMockIDumpEngineService(ctrl *gomock.Controller) *MockIDumpEngineService {
	mock := &MockIDumpEngineService{ctrl: ctrl}
	mock.recorder = &MockIDumpEngineServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockIDumpEngineService) EXPECT() *MockIDumpEngineServiceMockRecorder {
	return m.recorder
}

// Dumps mocks base method.
func (m *MockIDumpEngineService) Dumps(arg0 *context.Context) ([]DumpJson, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Dumps", arg0)
	ret0, _ := ret[0].([]DumpJson)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Dumps indicates an expected call of Dumps.
func (mr *MockIDumpEngineServiceMockRecorder) Dumps(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Dumps", reflect.TypeOf((*MockIDumpEngineService)(nil).Dumps), arg0)
}

// Run mocks base method.
func (m *MockIDumpEngineService) Run(arg0 *context.Context, arg1, arg2 string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Run", arg0, arg1, arg2)
	ret0, _ := ret[0].(error)
	return ret0
}

// Run indicates an expected call of Run.
func (mr *MockIDumpEngineServiceMockRecorder) Run(arg0, arg1, arg2 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Run", reflect.TypeOf((*MockIDumpEngineService)(nil).Run), arg0, arg1, arg2)
}
