// Code generated by MockGen. DO NOT EDIT.
// Source: go-chromedp/app/service (interfaces: IWdaService)

// Package service is a generated GoMock package.
package service

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockIWdaService is a mock of IWdaService interface.
type MockIWdaService struct {
	ctrl     *gomock.Controller
	recorder *MockIWdaServiceMockRecorder
}

// MockIWdaServiceMockRecorder is the mock recorder for MockIWdaService.
type MockIWdaServiceMockRecorder struct {
	mock *MockIWdaService
}

// NewMockIWdaService creates a new mock instance.
func NewMockIWdaService(ctrl *gomock.Controller) *MockIWdaService {
	mock := &MockIWdaService{ctrl: ctrl}
	mock.recorder = &MockIWdaServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockIWdaService) EXPECT() *MockIWdaServiceMockRecorder {
	return m.recorder
}

// Run mocks base method.
func (m *MockIWdaService) Run(arg0 *context.Context, arg1 string, arg2 <-chan DumpJson) <-chan WdaInfo {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Run", arg0, arg1, arg2)
	ret0, _ := ret[0].(<-chan WdaInfo)
	return ret0
}

// Run indicates an expected call of Run.
func (mr *MockIWdaServiceMockRecorder) Run(arg0, arg1, arg2 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Run", reflect.TypeOf((*MockIWdaService)(nil).Run), arg0, arg1, arg2)
}
